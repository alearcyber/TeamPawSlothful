Index: src/App.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\nimport java.awt.event.MouseAdapter;\r\nimport java.awt.event.MouseEvent;\r\n\r\npublic class App implements Observer<WorkoutModel>{\r\n    private JPanel panel1;\r\n    private JTabbedPane tabbedPane1;\r\n    private JComboBox comboBox1;\r\n    private JPanel ExercisesPanel;\r\n    private JPanel DetailPanel;\r\n    private JButton addExerciseButton;\r\n    private JPanel currentPlanA;\r\n\r\n    private WorkoutController controller;\r\n    private WorkoutModel model;\r\n\r\n\r\n\r\n\r\n\r\n    public App(){\r\n        model = new WorkoutModel();\r\n        model.addObserver(this);\r\n        controller = new WorkoutController(model);\r\n        controller.updateWorkouts(comboBox1.getSelectedItem().toString());\r\n\r\n\r\n        ExercisesPanel.setLayout(new BoxLayout(ExercisesPanel, BoxLayout.X_AXIS));\r\n        DetailPanel.setLayout(new BoxLayout(DetailPanel, BoxLayout.X_AXIS));\r\n        currentPlanA.setLayout(new BoxLayout(currentPlanA, BoxLayout.X_AXIS));\r\n\r\n        comboBox1.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                controller.updateWorkouts(comboBox1.getSelectedItem().toString());\r\n                ExercisesPanel.revalidate();\r\n            }\r\n        });\r\n\r\n\r\n        addExerciseButton.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                try {\r\n                    controller.addToPlan(model.getSelectedEx());\r\n                }catch(NullPointerException ex){\r\n                    System.out.println(\"No exercise selected\");\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    @Override\r\n    public void update(WorkoutModel model) {\r\n        ExercisesPanel.removeAll();\r\n        //Integer index=1;\r\n        for(Exercise exercise: model.getFirstPaneList()){\r\n            String calString = \"Cal / Min: \" + exercise.getCalories();\r\n            BoxFillerRatio filler = new BoxFillerRatio(3,4,\r\n                    new ExerciseCard(exercise.getName(),exercise.getType(), exercise.getCalories(), calString).getPanel(),\r\n                    BoxLayout.Y_AXIS);\r\n            filler.addMouseListener(new MouseAdapter() {\r\n                public void mouseClicked(MouseEvent me) {\r\n                    BoxFillerRatio temp = new BoxFillerRatio(3,4,\r\n                            new ExerciseCard(exercise.getName(),exercise.getType(), exercise.getCalories(), calString).getPanel(),\r\n                            BoxLayout.Y_AXIS);\r\n                    DetailPanel.removeAll();\r\n                    DetailPanel.add(temp);\r\n                    panel1.revalidate();\r\n\r\n                    //tracking selected exercise\r\n                    controller.setSelected(exercise);\r\n                }\r\n            });\r\n            ExercisesPanel.add(filler);\r\n        }\r\n        panel1.revalidate();\r\n\r\n\r\n        //setting the selected exercise\r\n        currentPlanA.removeAll();\r\n        for(Exercise exercise: model.getCurrentPlan()){\r\n            BoxFillerRatio newbox = new BoxFillerRatio(3,4,\r\n                    new ExerciseCard(exercise.getName(),exercise.getType(), exercise.getCalories(), \"Cal / Min: \" + exercise.getCalories()).getPanel(),\r\n                    BoxLayout.Y_AXIS);\r\n\r\n            currentPlanA.add(newbox);\r\n        }\r\n        panel1.revalidate();\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        JFrame frame = new JFrame(\"My Exercise Planner\");\r\n        Dimension size = Toolkit.getDefaultToolkit().getScreenSize();\r\n        frame.setPreferredSize(new Dimension((int) size.getWidth() / 2, (int) size.getHeight() / 2));\r\n        frame.setLocation(new Point((int) size.getWidth() / 4, (int) size.getHeight() / 4));\r\n        frame.setContentPane(new App().panel1);\r\n        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n        frame.pack();\r\n        frame.setVisible(true);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/App.java b/src/App.java
--- a/src/App.java	
+++ b/src/App.java	
@@ -6,21 +6,20 @@
 import java.awt.event.MouseEvent;
 
 public class App implements Observer<WorkoutModel>{
-    private JPanel panel1;
+
+    private static final JFrame frame = new JFrame("My Exercise Planner");
+    private JPanel mainPanel;
     private JTabbedPane tabbedPane1;
-    private JComboBox comboBox1;
     private JPanel ExercisesPanel;
     private JPanel DetailPanel;
     private JButton addExerciseButton;
     private JPanel currentPlanA;
 
+    private JComboBox comboBox1;
+
     private WorkoutController controller;
     private WorkoutModel model;
 
-
-
-
-
     public App(){
         model = new WorkoutModel();
         model.addObserver(this);
@@ -61,16 +60,16 @@
         for(Exercise exercise: model.getFirstPaneList()){
             String calString = "Cal / Min: " + exercise.getCalories();
             BoxFillerRatio filler = new BoxFillerRatio(3,4,
-                    new ExerciseCard(exercise.getName(),exercise.getType(), exercise.getCalories(), calString).getPanel(),
+                    new ExerciseCard(exercise.getName(),exercise.getType(), calString).getPanel(),
                     BoxLayout.Y_AXIS);
             filler.addMouseListener(new MouseAdapter() {
                 public void mouseClicked(MouseEvent me) {
                     BoxFillerRatio temp = new BoxFillerRatio(3,4,
-                            new ExerciseCard(exercise.getName(),exercise.getType(), exercise.getCalories(), calString).getPanel(),
+                            new ExerciseCard(exercise.getName(),exercise.getType(), calString).getPanel(),
                             BoxLayout.Y_AXIS);
                     DetailPanel.removeAll();
                     DetailPanel.add(temp);
-                    panel1.revalidate();
+                    mainPanel.revalidate();
 
                     //tracking selected exercise
                     controller.setSelected(exercise);
@@ -78,27 +77,27 @@
             });
             ExercisesPanel.add(filler);
         }
-        panel1.revalidate();
+        mainPanel.revalidate();
 
 
         //setting the selected exercise
         currentPlanA.removeAll();
         for(Exercise exercise: model.getCurrentPlan()){
             BoxFillerRatio newbox = new BoxFillerRatio(3,4,
-                    new ExerciseCard(exercise.getName(),exercise.getType(), exercise.getCalories(), "Cal / Min: " + exercise.getCalories()).getPanel(),
+                    new ExerciseCard(exercise.getName(),exercise.getType(), "Cal / Min: " + exercise.getCalories()).getPanel(),
                     BoxLayout.Y_AXIS);
 
             currentPlanA.add(newbox);
         }
-        panel1.revalidate();
+        mainPanel.revalidate();
     }
 
     public static void main(String[] args) {
-        JFrame frame = new JFrame("My Exercise Planner");
+
         Dimension size = Toolkit.getDefaultToolkit().getScreenSize();
         frame.setPreferredSize(new Dimension((int) size.getWidth() / 2, (int) size.getHeight() / 2));
         frame.setLocation(new Point((int) size.getWidth() / 4, (int) size.getHeight() / 4));
-        frame.setContentPane(new App().panel1);
+        frame.setContentPane(new App().mainPanel);
         frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
         frame.pack();
         frame.setVisible(true);
Index: src/WorkoutController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>public class WorkoutController {\r\n\r\n    /** local instance of the model */\r\n    private WorkoutModel model;\r\n\r\n    /**\r\n     * construct and set the model\r\n     * @param model this classes instance of the model\r\n     */\r\n    public WorkoutController(WorkoutModel model){\r\n        this.model = model;\r\n    }\r\n\r\n\r\n    public void setSelected(Exercise ex){\r\n        model.setSelectedEx(ex);\r\n    }\r\n\r\n\r\n    public void addToPlan(Exercise ex){\r\n        model.addToPlan(ex);\r\n    }\r\n\r\n\r\n    /**\r\n     * update workouts int he first panel thing\r\n     */\r\n    public void updateWorkouts(String type){\r\n        try {\r\n            model.updateWorkout(type);\r\n        }catch(Exception e){}\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/WorkoutController.java b/src/WorkoutController.java
--- a/src/WorkoutController.java	
+++ b/src/WorkoutController.java	
@@ -1,17 +1,20 @@
 public class WorkoutController {
 
-    /** local instance of the model */
     private WorkoutModel model;
 
-    /**
-     * construct and set the model
+    /**Default Constructor*/
+    public WorkoutController(){};
+
+    /**Parameterized Constructor
      * @param model this classes instance of the model
      */
     public WorkoutController(WorkoutModel model){
         this.model = model;
     }
 
-
+    /**Set selected exercise from Add Exercise panel
+     * @param ex Exercise selected from Add Exercise panel
+     */
     public void setSelected(Exercise ex){
         model.setSelectedEx(ex);
     }
Index: src/WorkoutModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.ArrayList;\r\nimport java.util.List;\r\n\r\n/**\r\n * this class will serve as the model in the mvc to hold the data that belongs in the\r\n * application.\r\n *\r\n * @Author - add your name when you make changes and whatnot\r\n * Aidan Lear\r\n *\r\n * Date - 2/15/2021\r\n *\r\n * Notes:\r\n *  currently this will be my strating point with regards to coding. Also testing git a little\r\n */\r\npublic class WorkoutModel {\r\n\r\n    /** list of observers to notify when something changes */\r\n    private List<Observer<WorkoutModel>> observers;\r\n\r\n    private ArrayList<Exercise> firstPaneList = new ArrayList<>(); //exercises to be displayed\r\n\r\n    private ArrayList<Exercise> currentPlan = new ArrayList<>();\r\n\r\n    private Exercise selectedEx;\r\n\r\n    //private ArrayList<Exercise> listOfExercises;\r\n\r\n    //private DBmanager database;\r\n\r\n\r\n    //public WokroutModel(){\r\n        //databse.getall the exersicse\r\n    //}\r\n    public WorkoutModel(){\r\n        DBmanager.getData();\r\n        observers = new ArrayList<>();\r\n    }\r\n\r\n\r\n\r\n\r\n    /**\r\n     * add an observer to the list of observers to be observed\r\n     * @param observer the observer to be registered\r\n     */\r\n    public void addObserver(Observer<WorkoutModel> observer){\r\n        observers.add(observer);\r\n    }\r\n\r\n\r\n    /**\r\n     * helper function to use when changes occur to notify the observers\r\n     * that a change has occured\r\n     */\r\n    private void notifyObservers(){\r\n        for(Observer<WorkoutModel> observer: observers){\r\n            observer.update(this);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    public void updateWorkout(String type) throws Exception{\r\n        firstPaneList.clear();\r\n        ArrayList<Exercise> exercises = DBmanager.getExercises();\r\n\r\n        for(Exercise e: exercises){\r\n\r\n            if(e.getType().toLowerCase().equals(type.toLowerCase()) || type == \"Exercise Type\"){\r\n                firstPaneList.add(e);\r\n            }\r\n        }\r\n        notifyObservers();\r\n    }\r\n\r\n    public ArrayList<Exercise> getFirstPaneList(){\r\n        return firstPaneList;\r\n    }\r\n\r\n\r\n    public void setSelectedEx(Exercise selectedEx) {\r\n        this.selectedEx = selectedEx;\r\n        notifyObservers();\r\n    }\r\n\r\n    public Exercise getSelectedEx(){\r\n        return selectedEx;\r\n    }\r\n\r\n    public ArrayList<Exercise> getCurrentPlan(){\r\n        return this.currentPlan;\r\n    }\r\n\r\n    /***\r\n     * add an exercise to the plan\r\n     * @param ex exercise to be added\r\n     */\r\n    public void addToPlan(Exercise ex){\r\n        currentPlan.add(ex);\r\n        notifyObservers();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/WorkoutModel.java b/src/WorkoutModel.java
--- a/src/WorkoutModel.java	
+++ b/src/WorkoutModel.java	
@@ -1,45 +1,20 @@
 import java.util.ArrayList;
 import java.util.List;
 
-/**
- * this class will serve as the model in the mvc to hold the data that belongs in the
- * application.
- *
- * @Author - add your name when you make changes and whatnot
- * Aidan Lear
- *
- * Date - 2/15/2021
- *
- * Notes:
- *  currently this will be my strating point with regards to coding. Also testing git a little
- */
 public class WorkoutModel {
 
-    /** list of observers to notify when something changes */
     private List<Observer<WorkoutModel>> observers;
-
-    private ArrayList<Exercise> firstPaneList = new ArrayList<>(); //exercises to be displayed
-
+    private ArrayList<Exercise> firstPaneList = new ArrayList<>();
     private ArrayList<Exercise> currentPlan = new ArrayList<>();
-
+    private ArrayList<Exercise> exercises = new ArrayList<>();
     private Exercise selectedEx;
 
-    //private ArrayList<Exercise> listOfExercises;
-
-    //private DBmanager database;
-
-
-    //public WokroutModel(){
-        //databse.getall the exersicse
-    //}
+    /**Default Constructor*/
     public WorkoutModel(){
         DBmanager.getData();
         observers = new ArrayList<>();
     }
 
-
-
-
     /**
      * add an observer to the list of observers to be observed
      * @param observer the observer to be registered
@@ -59,45 +34,56 @@
         }
     }
 
-
-
-    public void updateWorkout(String type) throws Exception{
+    /**Updates exercises shown in the Add Exercise panel
+     * @param type Type of exercises to show in Add Exercise panel
+     */
+    public void updateWorkout(String type) {
         firstPaneList.clear();
-        ArrayList<Exercise> exercises = DBmanager.getExercises();
+        exercises = DBmanager.getExercises();
 
         for(Exercise e: exercises){
 
-            if(e.getType().toLowerCase().equals(type.toLowerCase()) || type == "Exercise Type"){
+            if(e.getType().equalsIgnoreCase(type) || type == "Exercise Type"){
                 firstPaneList.add(e);
             }
         }
         notifyObservers();
     }
 
-    public ArrayList<Exercise> getFirstPaneList(){
-        return firstPaneList;
+    /**Add an exercise to current plan
+     * @param ex Exercise to be added to current plan
+     */
+    public void addToPlan(Exercise ex){
+        currentPlan.add(ex);
+        notifyObservers();
     }
 
-
+    /**Set selected exercise from Add Exercise panel
+     * @param selectedEx Exercise selected from Add Exercise panel
+     */
     public void setSelectedEx(Exercise selectedEx) {
         this.selectedEx = selectedEx;
         notifyObservers();
     }
 
+    /**Get list of exercises contained in Add Exercise panel
+     * @return List of exercises contained in Add Exercise panel
+     */
+    public ArrayList<Exercise> getFirstPaneList(){
+        return firstPaneList;
+    }
+
+    /**Get selected exercise from Add Exercise panel
+     * @return Selected exercise from Add Exercise panel
+     */
     public Exercise getSelectedEx(){
         return selectedEx;
     }
 
+    /**Get current plan
+     * @return Current plan
+     */
     public ArrayList<Exercise> getCurrentPlan(){
         return this.currentPlan;
     }
-
-    /***
-     * add an exercise to the plan
-     * @param ex exercise to be added
-     */
-    public void addToPlan(Exercise ex){
-        currentPlan.add(ex);
-        notifyObservers();
-    }
 }
Index: src/DBmanager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import org.json.simple.JSONArray;\r\nimport org.json.simple.JSONObject;\r\nimport org.json.simple.parser.JSONParser;\r\nimport org.json.simple.parser.ParseException;\r\n\r\nimport java.io.FileReader;\r\nimport java.io.FileWriter;\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\n\r\npublic class DBmanager {\r\n\r\n    private static final String FILENAME = \"src//database\";\r\n    private static JSONArray dataArray;\r\n    private static final ArrayList<Exercise> exercises = new ArrayList<>();\r\n    private static final ArrayList<Workout> workouts = new ArrayList<>();\r\n\r\n    /**Main method, constructs model from database*/\r\n    public static void main(String[] args) {\r\n        getData();\r\n        /*Un-suppress to test adding exercises to database\r\n        System.out.println(getExercises());\r\n        addExercise(\"Back-flips\", \"legs\", \"1\");\r\n        System.out.println(getExercises());\r\n        */\r\n\r\n        /*Un-suppress to test adding workouts to database\r\n        System.out.println(getWorkouts());\r\n        addWorkout(\"workout2\", \"Back-flips\", \"Curls\");\r\n        System.out.println(getWorkouts());\r\n        */\r\n    }\r\n\r\n    /**Gets data from JSON database file\r\n     */\r\n    public static void getData() {\r\n        try {\r\n            FileReader reader = new FileReader(FILENAME);\r\n            JSONParser parser = new JSONParser();\r\n            Object data = parser.parse(reader);\r\n            dataArray = (JSONArray) data;\r\n            dataArray.forEach( exe -> parseExercise((JSONObject) exe));\r\n            dataArray.forEach( exe -> parseWorkout((JSONObject) exe));\r\n        }catch (IOException| ParseException e) {e.printStackTrace();}\r\n    }\r\n\r\n    /**Parse database for exercises\r\n     * @param exerciseData: Exercise data from database\r\n     */\r\n    public static void parseExercise(JSONObject exerciseData){\r\n        if(exerciseData.containsKey(\"exercise\")) {\r\n            JSONObject exerciseObjects = (JSONObject) exerciseData.get(\"exercise\");\r\n            String name = (String) exerciseObjects.get(\"name\");\r\n            String type = (String) exerciseObjects.get(\"type\");\r\n            String calories = (String) exerciseObjects.get(\"calories\");\r\n            Exercise exercise = new Exercise(name, calories, type);\r\n            exercises.add(exercise);\r\n        }\r\n    }\r\n\r\n    /**Parse database for workouts\r\n     * @param workoutData: Workout data from database\r\n     */\r\n    public static void parseWorkout(JSONObject workoutData){\r\n        if(workoutData.containsKey(\"workout\")) {\r\n                JSONObject workoutObjects = (JSONObject) workoutData.get(\"workout\");\r\n                String name = (String) workoutObjects.get(\"name\");\r\n\r\n                Object temp = workoutObjects.get(\"exercises\");\r\n                ArrayList<String> tempArray = (ArrayList<String>) temp;\r\n\r\n                Workout workout = new Workout(name, tempArray);\r\n                workouts.add(workout);\r\n        }\r\n    }\r\n\r\n    /**Add new exercise to database\r\n     * @param name: Name of the exercise to add\r\n     * @param calories: Calories burned per minute of the exercise to add\r\n     * @param type: Type of the exercise to add\r\n     */\r\n    public static void addExercise(String name, String type, String calories) {\r\n        JSONObject ex = new JSONObject();\r\n        JSONObject exRapper = new JSONObject();\r\n\r\n        ex.put(\"name\", name);\r\n        ex.put(\"type\", type);\r\n        ex.put(\"calories\", calories);\r\n\r\n        exRapper.put(\"exercise\", ex);\r\n        dataArray.add(exRapper);\r\n\r\n        try (FileWriter file = new FileWriter(FILENAME)) {\r\n            file.write(dataArray.toJSONString());\r\n            file.flush();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        Exercise exerciseToAdd = new Exercise(name, type, calories);\r\n        exercises.add(exerciseToAdd);\r\n    }\r\n\r\n    /**Add new workout to database\r\n     * @param name: Name of the workout to add\r\n     * @param exercises: Exercises in the workout to add\r\n     */\r\n    private static void addWorkout(String name, String ...exercises) {\r\n        JSONObject workout = new JSONObject();\r\n        JSONObject workoutRapper = new JSONObject();\r\n        ArrayList<String> workoutExercises = new ArrayList<>();\r\n\r\n        Collections.addAll(workoutExercises, exercises);\r\n\r\n        workout.put(\"name\", name);\r\n        workout.put(\"exercises\", workoutExercises);\r\n\r\n        workoutRapper.put(\"workout\", workout);\r\n        dataArray.add(workoutRapper);\r\n\r\n        try (FileWriter file = new FileWriter(FILENAME)) {\r\n            file.write(dataArray.toJSONString());\r\n            file.flush();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        Workout workoutToAdd = new Workout(name, workoutExercises);\r\n        workouts.add(workoutToAdd);\r\n    }\r\n\r\n    /**Gets workouts stored in the database\r\n     * @return Workouts stored in database\r\n     */\r\n    public static ArrayList<Workout> getWorkouts(){\r\n        return workouts;\r\n    }\r\n\r\n    /**Gets exercises stored in the database\r\n     * @return Exercises stored in database\r\n     */\r\n    public static ArrayList<Exercise> getExercises(){\r\n        return exercises;\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/DBmanager.java b/src/DBmanager.java
--- a/src/DBmanager.java	
+++ b/src/DBmanager.java	
@@ -16,24 +16,7 @@
     private static final ArrayList<Exercise> exercises = new ArrayList<>();
     private static final ArrayList<Workout> workouts = new ArrayList<>();
 
-    /**Main method, constructs model from database*/
-    public static void main(String[] args) {
-        getData();
-        /*Un-suppress to test adding exercises to database
-        System.out.println(getExercises());
-        addExercise("Back-flips", "legs", "1");
-        System.out.println(getExercises());
-        */
-
-        /*Un-suppress to test adding workouts to database
-        System.out.println(getWorkouts());
-        addWorkout("workout2", "Back-flips", "Curls");
-        System.out.println(getWorkouts());
-        */
-    }
-
-    /**Gets data from JSON database file
-     */
+    /**Gets data from JSON database file*/
     public static void getData() {
         try {
             FileReader reader = new FileReader(FILENAME);
Index: src/ExerciseCard.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import javax.swing.*;\r\n\r\npublic class ExerciseCard {\r\n    private JPanel panel1;\r\n    private JLabel nameLabel;\r\n    private JLabel typeLabel;\r\n    private JLabel indexLabel;\r\n\r\n    public ExerciseCard(String name,String type,Integer index, String calories){\r\n        nameLabel.setText(name);\r\n        typeLabel.setText(type);\r\n        //indexLabel.setText(index.toString());\r\n        indexLabel.setText(calories);\r\n    }\r\n    public JPanel getPanel(){\r\n        return panel1;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/ExerciseCard.java b/src/ExerciseCard.java
--- a/src/ExerciseCard.java	
+++ b/src/ExerciseCard.java	
@@ -1,18 +1,29 @@
 import javax.swing.*;
 
 public class ExerciseCard {
-    private JPanel panel1;
+    private JPanel mainPanel;
     private JLabel nameLabel;
     private JLabel typeLabel;
-    private JLabel indexLabel;
+    private JLabel calorieLabel;
 
-    public ExerciseCard(String name,String type,Integer index, String calories){
+    /**Default Constructor*/
+    public ExerciseCard(){};
+
+    /**Parameterized Constructor
+     * @param name Name of exercise
+     * @param type Type of exercise
+     * @param calories Calories burned per minute of exercise
+     */
+    public ExerciseCard(String name,String type, String calories){
         nameLabel.setText(name);
         typeLabel.setText(type);
-        //indexLabel.setText(index.toString());
-        indexLabel.setText(calories);
+        calorieLabel.setText(calories);
     }
+
+    /**Get Main Panel of Exercise Card
+     * @return Main Panel of Exercise Card
+     */
     public JPanel getPanel(){
-        return panel1;
+        return mainPanel;
     }
 }
Index: src/ExerciseCard.form
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<form xmlns=\"http://www.intellij.com/uidesigner/form/\" version=\"1\" bind-to-class=\"ExerciseCard\">\r\n  <grid id=\"27dc6\" binding=\"panel1\" default-binding=\"true\" layout-manager=\"GridLayoutManager\" row-count=\"5\" column-count=\"1\" same-size-horizontally=\"false\" same-size-vertically=\"true\" hgap=\"-1\" vgap=\"-1\">\r\n    <margin top=\"0\" left=\"0\" bottom=\"0\" right=\"0\"/>\r\n    <constraints>\r\n      <xy x=\"20\" y=\"20\" width=\"500\" height=\"400\"/>\r\n    </constraints>\r\n    <properties/>\r\n    <border type=\"none\"/>\r\n    <children>\r\n      <component id=\"d4e86\" class=\"javax.swing.JLabel\" binding=\"nameLabel\">\r\n        <constraints>\r\n          <grid row=\"1\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"0\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\"/>\r\n        </constraints>\r\n        <properties>\r\n          <text value=\"Name\"/>\r\n        </properties>\r\n      </component>\r\n      <component id=\"aba54\" class=\"javax.swing.JLabel\" binding=\"typeLabel\">\r\n        <constraints>\r\n          <grid row=\"2\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"0\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\"/>\r\n        </constraints>\r\n        <properties>\r\n          <text value=\"Type\"/>\r\n        </properties>\r\n      </component>\r\n      <component id=\"891a1\" class=\"javax.swing.JLabel\" binding=\"indexLabel\">\r\n        <constraints>\r\n          <grid row=\"3\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"0\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\"/>\r\n        </constraints>\r\n        <properties>\r\n          <text value=\"Index\"/>\r\n        </properties>\r\n      </component>\r\n      <vspacer id=\"381ea\">\r\n        <constraints>\r\n          <grid row=\"0\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"6\" hsize-policy=\"1\" anchor=\"0\" fill=\"2\" indent=\"0\" use-parent-layout=\"false\"/>\r\n        </constraints>\r\n      </vspacer>\r\n      <vspacer id=\"38c79\">\r\n        <constraints>\r\n          <grid row=\"4\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"6\" hsize-policy=\"1\" anchor=\"0\" fill=\"2\" indent=\"0\" use-parent-layout=\"false\"/>\r\n        </constraints>\r\n      </vspacer>\r\n    </children>\r\n  </grid>\r\n</form>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/ExerciseCard.form b/src/ExerciseCard.form
--- a/src/ExerciseCard.form	
+++ b/src/ExerciseCard.form	
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <form xmlns="http://www.intellij.com/uidesigner/form/" version="1" bind-to-class="ExerciseCard">
-  <grid id="27dc6" binding="panel1" default-binding="true" layout-manager="GridLayoutManager" row-count="5" column-count="1" same-size-horizontally="false" same-size-vertically="true" hgap="-1" vgap="-1">
+  <grid id="27dc6" binding="mainPanel" layout-manager="GridLayoutManager" row-count="5" column-count="1" same-size-horizontally="false" same-size-vertically="true" hgap="-1" vgap="-1">
     <margin top="0" left="0" bottom="0" right="0"/>
     <constraints>
       <xy x="20" y="20" width="500" height="400"/>
@@ -24,12 +24,12 @@
           <text value="Type"/>
         </properties>
       </component>
-      <component id="891a1" class="javax.swing.JLabel" binding="indexLabel">
+      <component id="891a1" class="javax.swing.JLabel" binding="calorieLabel">
         <constraints>
           <grid row="3" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="0" fill="0" indent="0" use-parent-layout="false"/>
         </constraints>
         <properties>
-          <text value="Index"/>
+          <text value="Calorie"/>
         </properties>
       </component>
       <vspacer id="381ea">
Index: src/App.form
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<form xmlns=\"http://www.intellij.com/uidesigner/form/\" version=\"1\" bind-to-class=\"App\">\r\n  <grid id=\"27dc6\" binding=\"panel1\" default-binding=\"true\" layout-manager=\"GridLayoutManager\" row-count=\"1\" column-count=\"1\" same-size-horizontally=\"false\" same-size-vertically=\"false\" hgap=\"-1\" vgap=\"-1\">\r\n    <margin top=\"0\" left=\"0\" bottom=\"0\" right=\"0\"/>\r\n    <constraints>\r\n      <xy x=\"20\" y=\"20\" width=\"774\" height=\"604\"/>\r\n    </constraints>\r\n    <properties/>\r\n    <border type=\"none\"/>\r\n    <children>\r\n      <tabbedpane id=\"93c78\" binding=\"tabbedPane1\" default-binding=\"true\">\r\n        <constraints>\r\n          <grid row=\"0\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\" indent=\"0\" use-parent-layout=\"false\">\r\n            <preferred-size width=\"200\" height=\"200\"/>\r\n          </grid>\r\n        </constraints>\r\n        <properties/>\r\n        <border type=\"none\"/>\r\n        <children>\r\n          <grid id=\"c1e40\" layout-manager=\"GridLayoutManager\" row-count=\"6\" column-count=\"3\" same-size-horizontally=\"false\" same-size-vertically=\"false\" hgap=\"-1\" vgap=\"-1\">\r\n            <margin top=\"0\" left=\"0\" bottom=\"0\" right=\"0\"/>\r\n            <constraints>\r\n              <tabbedpane title=\"Planner\"/>\r\n            </constraints>\r\n            <properties/>\r\n            <border type=\"none\"/>\r\n            <children>\r\n              <scrollpane id=\"de3a0\">\r\n                <constraints>\r\n                  <grid row=\"1\" column=\"0\" row-span=\"1\" col-span=\"3\" vsize-policy=\"7\" hsize-policy=\"7\" anchor=\"0\" fill=\"3\" indent=\"0\" use-parent-layout=\"false\"/>\r\n                </constraints>\r\n                <properties>\r\n                  <horizontalScrollBarPolicy value=\"32\"/>\r\n                  <verticalScrollBarPolicy value=\"21\"/>\r\n                </properties>\r\n                <border type=\"none\"/>\r\n                <children>\r\n                  <grid id=\"326cf\" binding=\"ExercisesPanel\" layout-manager=\"FlowLayout\" hgap=\"5\" vgap=\"5\" flow-align=\"1\">\r\n                    <constraints/>\r\n                    <properties/>\r\n                    <border type=\"none\"/>\r\n                    <children/>\r\n                  </grid>\r\n                </children>\r\n              </scrollpane>\r\n              <component id=\"8db5f\" class=\"javax.swing.JLabel\">\r\n                <constraints>\r\n                  <grid row=\"4\" column=\"0\" row-span=\"1\" col-span=\"3\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\"/>\r\n                </constraints>\r\n                <properties>\r\n                  <text value=\"Current Plan\"/>\r\n                </properties>\r\n              </component>\r\n              <scrollpane id=\"51008\">\r\n                <constraints>\r\n                  <grid row=\"5\" column=\"0\" row-span=\"1\" col-span=\"3\" vsize-policy=\"7\" hsize-policy=\"7\" anchor=\"0\" fill=\"3\" indent=\"0\" use-parent-layout=\"false\"/>\r\n                </constraints>\r\n                <properties>\r\n                  <horizontalScrollBarPolicy value=\"32\"/>\r\n                  <verticalScrollBarPolicy value=\"21\"/>\r\n                </properties>\r\n                <border type=\"none\"/>\r\n                <children>\r\n                  <grid id=\"8228e\" binding=\"currentPlanA\" layout-manager=\"FlowLayout\" hgap=\"5\" vgap=\"5\" flow-align=\"1\">\r\n                    <constraints/>\r\n                    <properties/>\r\n                    <border type=\"none\"/>\r\n                    <children/>\r\n                  </grid>\r\n                </children>\r\n              </scrollpane>\r\n              <component id=\"e4b99\" class=\"javax.swing.JLabel\">\r\n                <constraints>\r\n                  <grid row=\"2\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\"/>\r\n                </constraints>\r\n                <properties>\r\n                  <text value=\"Details\"/>\r\n                </properties>\r\n              </component>\r\n              <grid id=\"193c9\" layout-manager=\"GridLayoutManager\" row-count=\"1\" column-count=\"3\" same-size-horizontally=\"false\" same-size-vertically=\"false\" hgap=\"-1\" vgap=\"-1\">\r\n                <margin top=\"0\" left=\"0\" bottom=\"0\" right=\"0\"/>\r\n                <constraints>\r\n                  <grid row=\"0\" column=\"0\" row-span=\"1\" col-span=\"3\" vsize-policy=\"3\" hsize-policy=\"3\" anchor=\"0\" fill=\"3\" indent=\"0\" use-parent-layout=\"false\"/>\r\n                </constraints>\r\n                <properties/>\r\n                <border type=\"none\"/>\r\n                <children>\r\n                  <component id=\"dfa1\" class=\"javax.swing.JLabel\">\r\n                    <constraints>\r\n                      <grid row=\"0\" column=\"0\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"0\" anchor=\"8\" fill=\"0\" indent=\"0\" use-parent-layout=\"false\"/>\r\n                    </constraints>\r\n                    <properties>\r\n                      <text value=\"Add Exercise\"/>\r\n                    </properties>\r\n                  </component>\r\n                  <hspacer id=\"d4836\">\r\n                    <constraints>\r\n                      <grid row=\"0\" column=\"1\" row-span=\"1\" col-span=\"1\" vsize-policy=\"1\" hsize-policy=\"6\" anchor=\"0\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\"/>\r\n                    </constraints>\r\n                  </hspacer>\r\n                  <component id=\"9aa39\" class=\"javax.swing.JComboBox\" binding=\"comboBox1\" default-binding=\"true\">\r\n                    <constraints>\r\n                      <grid row=\"0\" column=\"2\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"2\" anchor=\"8\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\"/>\r\n                    </constraints>\r\n                    <properties>\r\n                      <model>\r\n                        <item value=\"Exercise Type\"/>\r\n                        <item value=\"Abs\"/>\r\n                        <item value=\"Arms\"/>\r\n                        <item value=\"Back\"/>\r\n                        <item value=\"Cardio\"/>\r\n                        <item value=\"Legs\"/>\r\n                        <item value=\"Shoulders\"/>\r\n                      </model>\r\n                    </properties>\r\n                  </component>\r\n                </children>\r\n              </grid>\r\n              <scrollpane id=\"68265\">\r\n                <constraints>\r\n                  <grid row=\"3\" column=\"0\" row-span=\"1\" col-span=\"3\" vsize-policy=\"7\" hsize-policy=\"7\" anchor=\"0\" fill=\"3\" indent=\"0\" use-parent-layout=\"false\"/>\r\n                </constraints>\r\n                <properties>\r\n                  <horizontalScrollBarPolicy value=\"31\"/>\r\n                  <verticalScrollBarPolicy value=\"21\"/>\r\n                </properties>\r\n                <border type=\"none\"/>\r\n                <children>\r\n                  <grid id=\"94fce\" binding=\"DetailPanel\" layout-manager=\"GridLayoutManager\" row-count=\"1\" column-count=\"1\" same-size-horizontally=\"false\" same-size-vertically=\"false\" hgap=\"-1\" vgap=\"-1\">\r\n                    <margin top=\"0\" left=\"0\" bottom=\"0\" right=\"0\"/>\r\n                    <constraints/>\r\n                    <properties/>\r\n                    <border type=\"none\"/>\r\n                    <children/>\r\n                  </grid>\r\n                </children>\r\n              </scrollpane>\r\n              <component id=\"aef45\" class=\"javax.swing.JButton\" binding=\"addExerciseButton\" default-binding=\"true\">\r\n                <constraints>\r\n                  <grid row=\"2\" column=\"2\" row-span=\"1\" col-span=\"1\" vsize-policy=\"0\" hsize-policy=\"3\" anchor=\"0\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\"/>\r\n                </constraints>\r\n                <properties>\r\n                  <text value=\"Add Exercise\"/>\r\n                </properties>\r\n              </component>\r\n              <hspacer id=\"bfc41\">\r\n                <constraints>\r\n                  <grid row=\"2\" column=\"1\" row-span=\"1\" col-span=\"1\" vsize-policy=\"1\" hsize-policy=\"6\" anchor=\"0\" fill=\"1\" indent=\"0\" use-parent-layout=\"false\"/>\r\n                </constraints>\r\n              </hspacer>\r\n            </children>\r\n          </grid>\r\n          <grid id=\"59061\" layout-manager=\"GridLayoutManager\" row-count=\"1\" column-count=\"1\" same-size-horizontally=\"false\" same-size-vertically=\"false\" hgap=\"-1\" vgap=\"-1\">\r\n            <margin top=\"0\" left=\"0\" bottom=\"0\" right=\"0\"/>\r\n            <constraints>\r\n              <tabbedpane title=\"My Plan\"/>\r\n            </constraints>\r\n            <properties/>\r\n            <border type=\"none\"/>\r\n            <children/>\r\n          </grid>\r\n        </children>\r\n      </tabbedpane>\r\n    </children>\r\n  </grid>\r\n</form>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/App.form b/src/App.form
--- a/src/App.form	
+++ b/src/App.form	
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <form xmlns="http://www.intellij.com/uidesigner/form/" version="1" bind-to-class="App">
-  <grid id="27dc6" binding="panel1" default-binding="true" layout-manager="GridLayoutManager" row-count="1" column-count="1" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
+  <grid id="27dc6" binding="mainPanel" layout-manager="GridLayoutManager" row-count="1" column-count="1" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
     <margin top="0" left="0" bottom="0" right="0"/>
     <constraints>
       <xy x="20" y="20" width="774" height="604"/>
